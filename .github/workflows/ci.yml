name: C++ CI

on:
  push:
    branches:
      - master
      - '*/*'

jobs:
  tests_x64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_READ }}

      - name: Set up Docker container
        run: |
          docker pull ghcr.io/piotrciosmak/height-vision-pi/x64:0.3.1

      - name: Install librares for test coverage
        run: |
          sudo apt install -y lcov

      - name: Build and run tests inside Docker
        run: |
          docker run --network host -v /run/udev:/run/udev -v $(pwd):/Height_Vision_Pi --entrypoint /bin/bash ghcr.io/piotrciosmak/height-vision-pi/x64:0.3.1 -c "
            cmake -S /Height_Vision_Pi -B /Height_Vision_Pi/build -DENABLE_TESTS=ON -DCMAKE_CXX_FLAGS='--coverage'
            cmake --build /Height_Vision_Pi/build --target AllUnitTests -- -j$(nproc) &&
            cd ./build/tests/unit &&
            ./AllUnitTests
            cd /Height_Vision_Pi/build &&
            lcov --capture --directory . --output-file coverage.info &&
            lcov --remove coverage.info '/usr/*' --output-file coverage_filtered.info &&
            genhtml coverage_filtered.info --output-directory coverage_report
          "
      - name: Send coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/coverage_filtered.info
          flags: unittests
          fail_ci_if_error: true

  tests_arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_READ }}

      - name: Install librares for test coverage
        run: |
          sudo apt install -y lcov

      - name: Build and run tests inside Docker
        run: |
          docker run --network host -v /run/udev:/run/udev -v $(pwd):/Height_Vision_Pi --entrypoint /bin/bash ghcr.io/piotrciosmak/height-vision-pi/arm64:0.7.1 -c "
            cmake -S /Height_Vision_Pi -B /Height_Vision_Pi/build -DENABLE_TESTS=ON -DCMAKE_CXX_FLAGS='--coverage'
            cmake --build /Height_Vision_Pi/build --target AllUnitTests -- -j$(nproc) &&
            cd ./build/tests/unit &&
            ./AllUnitTests &&
            lcov --capture --directory . --output-file coverage.info &&
            lcov --remove coverage.info '/usr/*' --output-file coverage_filtered.info &&
            genhtml coverage_filtered.info --output-directory coverage_report
          "

      - name: Send coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/coverage_filtered.info
          flags: unittests
          fail_ci_if_error: true